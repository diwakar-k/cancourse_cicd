# resource_types:
#   - name: kubectl-resource
#     type: docker-image
#     source: 
#       repository: jmkarthik/concourse-kubectl-resource
#       tag: latest

resources:
  - name: spring-boot-service
    type: git
    source:
      uri: https://github.com/diwakar-k/cancourse_cicd
      branch: master
  - name: storage
    type: s3
    source:
      # Name of the bucket in S3 account
      bucket: rishi-demo
      region_name: ap-south-1
      # filename of the application to read/write in S3 (check S3 resource documentation for parameters)
      # AWS Credentials are passed in command line on set-pipeline. Concourse can also use an external vault system to store credentials
      access_key_id: {{aws-access-key}}
      secret_access_key: {{aws-secret-key}}
  # - name: spring-boot-service-docker-repository
  #   type: docker-image
  #   source:
  #     email: ((docker-hub-email))
  #     username: ((docker-hub-username))
  #     password: ((docker-hub-password))
  #     repository: ((docker-hub-username))/((docker-hub-repo-name))

  # - name: kubectl
  #   type: kubectl-resource
  #   source:
  #     api_server_uri: ((server))
  #     namespace: ((namespace))
  #     certificate_authority_data: ((cad))
  #     token: ((token))

jobs:
  - name: test
    public: true

    plan:
      - get: spring-boot-service
        trigger: true
      - task: mvn-test
        file: "spring-boot-service/concourse_ci/tasks/maven-test.yml"

  - name: package
    public: true
    serial: true
    plan:
      - get: spring-boot-service
        trigger: true
        passed: [test]
      - task: mvn-package
        file: "spring-boot-service/concourse_ci/tasks/maven-package.yml"
      - put: storage
        params:
          build: spring-boot-service-out

  # - name: deploy
  #   public: true
  #   serial: true
  #   plan:
  #     - get: spring-boot-service
  #       trigger: false
  #       passed: [package]

  #     - put: kubectl
  #       params:
  #         file: "spring-boot-service/spring-boot-deploy.yaml"
